{"version":3,"sources":["components/assets/adventure.svg","components/Question.js","components/assets/undraw_winners_ao2o 2.svg","components/Results.js","components/Quiz.js","App.js","index.js"],"names":["LETTERS","Question","props","answers","question","map","item","index","className","isAnswered","correctAnswer","answered","onClick","handleAnswerClick","data-index","name","src","adventure","alt","type","flag","text","handleNextClick","Results","win","score","click","QUESTION_TYPES","COUNTRIES","a","fetch","data","json","jsonData","getCountriesData","Quiz","handleTryAgain","bind","state","turns","endGame","questionIsAnswered","gameInitiated","this","setState","generateNextQuestion","restartGame","Math","round","random","floor","countries","then","res","i","push","length","capital","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed7e8de4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/adventure.182b6171.svg\";","import './Question.scss'\r\nimport adventure from './assets/adventure.svg'\r\n\r\nconst LETTERS = ['A', 'B', 'C', 'D']\r\n\r\nfunction Question (props) {\r\n\r\n    const answers = props.question.answers.map((item, index) => {\r\n        return(\r\n            <div className={`question__answer\r\n                ${props.isAnswered ? 'question__answer-unactive' : ''}\r\n                ${(props.isAnswered && props.question.correctAnswer === index) ?\r\n                'question__answer-correct' : ''}\r\n                ${(props.isAnswered && props.question.correctAnswer !== index \r\n                    && props.answered === index) ? 'question__answer-incorrect' : ''}`} \r\n                key={index} onClick={() => props.handleAnswerClick(index)} \r\n                data-index={index}>\r\n                \r\n                    <p className=\"answer__letter\">{LETTERS[index]}</p>\r\n                    <p className=\"answer__text\">{item.name}</p>\r\n                \r\n            </div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className=\"question\">\r\n            <div className=\"question__image\">\r\n                <img src={adventure} alt=\"adventure\" />\r\n            </div>    \r\n            \r\n            <div className=\"question__text\">\r\n                {props.question.type ? (<div className=\"question__flag\">\r\n                    <img src={(props.question.answers[props.question.correctAnswer]).flag} alt=\"flag\" />\r\n                </div>) : ''}\r\n                <p>{props.question.text}</p>\r\n            </div>\r\n\r\n            <div className=\"question__answers\">\r\n                {answers}\r\n            </div>\r\n\r\n            {props.isAnswered && <div className=\"question__next\" onClick={() => props.handleNextClick()}>\r\n                <p>Next</p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","export default __webpack_public_path__ + \"static/media/undraw_winners_ao2o 2.d76bfdf8.svg\";","import './Results.scss'\r\n\r\nimport win from './assets/undraw_winners_ao2o 2.svg'\r\n\r\nconst Results = (props) => {\r\n\r\n    return (\r\n        <div className=\"results\">\r\n            <div className=\"results__img\">\r\n                <img src={win} alt=\"win\" />\r\n            </div>\r\n\r\n            <div className=\"results__text\">\r\n                <h2>Results</h2>\r\n                <p>You got <span className={props.score>3 ? 'green' : 'red'}>{props.score}</span> correct answer{props.score > 1 ? 's' : ''}</p>\r\n            </div>\r\n\r\n            <div className=\"results__button\" onClick={() => props.click()}>\r\n                <p>Try again</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Results","import { Component } from 'react'\r\n\r\nimport Question from './Question'\r\nimport Results from './Results'\r\n\r\nimport './Quiz.scss'\r\n\r\nconst URL = 'https://restcountries.eu/rest/v2/all'\r\nconst QUESTION_TYPES = [\r\n    { name: \"capital-city\", text: \"is the capital of\" },\r\n    { name: \"flag\", text: \"Which country does this flag belong to ?\"}\r\n]\r\n\r\nconst getCountriesData = async () => {\r\n    const data = await fetch(URL)\r\n    const jsonData = await data.json()\r\n    return jsonData\r\n}\r\n\r\nconst COUNTRIES = getCountriesData()\r\n\r\nclass Quiz extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.handleTryAgain = this.handleTryAgain.bind(this)\r\n        this.handleAnswerClick = this.handleAnswerClick.bind(this)\r\n        this.handleNextClick = this.handleNextClick.bind(this)\r\n\r\n        this.state={\r\n            turns: 0,\r\n            endGame: false,\r\n            score: 0,\r\n            questionIsAnswered: false,\r\n            gameInitiated: false,\r\n        }\r\n    }\r\n\r\n    restartGame(){\r\n        this.setState({\r\n            turns: 0,\r\n            endGame: false,\r\n            score: 0,\r\n            questionIsAnswered: false,\r\n        })\r\n    }\r\n\r\n    handleAnswerClick(index){\r\n        const win = this.state.question.correctAnswer === index\r\n        this.setState({\r\n            questionIsAnswered: true,\r\n            score: win ? this.state.score + 1 : this.state.score,\r\n            turns: this.state.turns + 1,\r\n            answered: index,\r\n        })\r\n        \r\n    }\r\n\r\n    handleNextClick(){\r\n        this.setState({\r\n            questionIsAnswered: false\r\n        })\r\n\r\n        if(this.state.turns > 9){\r\n            this.setState({\r\n                endGame: true,\r\n            })\r\n        }else{\r\n            this.generateNextQuestion()\r\n        }\r\n    }\r\n\r\n    handleTryAgain(){\r\n        this.generateNextQuestion()\r\n        this.restartGame()\r\n    }\r\n\r\n    generateNextQuestion(){\r\n        let question = {\r\n            answers: [],\r\n            type: Math.round(Math.random()),\r\n            correctAnswer: Math.floor(Math.random() * 4)\r\n        }\r\n        let countries = []\r\n\r\n        COUNTRIES.then( res => {\r\n            for(let i = 0; i<4; i++){\r\n                countries.push(res[Math.floor(Math.random() * res.length)])\r\n            }\r\n            question.answers = countries\r\n            let text\r\n            if(question.type){\r\n                text = QUESTION_TYPES[question.type].text\r\n            } else {\r\n                text = `${(question.answers[question.correctAnswer]).capital} ${(QUESTION_TYPES[question.type]).text}`\r\n            }\r\n            question.text = text\r\n            this.setState({ \r\n                question: question,\r\n                gameInitiated: true })\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const state = this.state\r\n\r\n        if (!this.state.gameInitiated){\r\n            this.generateNextQuestion()\r\n        }\r\n\r\n        return (\r\n            <div className=\"quiz\">\r\n\r\n                <h1 className=\"quiz__title\">COUNTRY QUIZ</h1>\r\n\r\n                <div className=\"quiz__game\">\r\n                    {!state.endGame && state.gameInitiated &&\r\n                    <Question question={state.question}\r\n                        isAnswered={state.questionIsAnswered}\r\n                        handleAnswerClick={this.handleAnswerClick}\r\n                        handleNextClick={this.handleNextClick}\r\n                        answered={this.state.answered} />\r\n                    }\r\n\r\n                    {state.endGame && <Results score={state.score} click={this.handleTryAgain} />}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz","import Quiz from './components/Quiz'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quiz />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);"],"sourceRoot":""}